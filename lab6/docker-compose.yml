version: '3.8'

services:
  database:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=services_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - services-network
      
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - services-network
      
  mongo:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - services-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - services-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - services-network

  user-app:
    build: ./user_app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/services_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=secret_key
      - JWT_ALGORITHM=HS256
    depends_on:
      - database
      - redis
    networks:
      - services-network
    restart: on-failure:5

  service-consumer:
    build: 
      context: ./service_app
      dockerfile: Dockerfile.service_consumer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/services_db
    depends_on:
      - kafka
      - database
    networks:
      - services-network

  service-app:
    build: ./service_app
    ports:
      - "8001:8001"
    environment:
      - JWT_SECRET_KEY=secret_key
      - JWT_ALGORITHM=HS256
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/services_db
    depends_on:
      - user-app
      - kafka
      - service-consumer
    networks:
      - services-network


  order-app:
    build: ./order_app
    ports:
      - "8002:8002"
    environment:
      - MONGO_URL=mongodb://mongo:27017
      - DATABASE_NAME=services_db
      - JWT_SECRET_KEY=secret_key
      - JWT_ALGORITHM=HS256
      - SERVICE_SERVICE_URL=http://localhost:8001
      - USER_SERVICE_URL=http://localhost:8000
    depends_on:
      - mongo
      - user-app
      - service-app
    networks:
      - services-network

networks:
  services-network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
  redis_data:
